// Generated by CoffeeScript 1.3.3
(function() {

  define(['backbone', 'GameModel'], function(Backbone, GameModel) {
    var BoardView, CELL_HEIGHT, CELL_WIDTH, DICE_CLASSES, MARGIN;
    CELL_WIDTH = 30;
    CELL_HEIGHT = 30;
    MARGIN = 45;
    DICE_CLASSES = ['one', 'two', 'three', 'four', 'five', 'six'];
    BoardView = Backbone.View.extend({
      el: $("#board_container"),
      boardSocket: null,
      hoveredCell: null,
      initialize: function() {
        this.playerid = this.options.playerid;
        return this.boardSocket = io.connect('/game_list');
      },
      events: {
        "click .back": "backToGameList"
      },
      render: function() {
        this.drawCells();
        return this.drawPawns();
      },
      drawCells: function() {
        var _this = this;
        return _.each(GameModel.BOARD, function(line, j) {
          return _.each(line, function(i) {
            var cellClass;
            cellClass = GameModel.getCellClass(i + ":" + j);
            return _this.drawCell(i, j, cellClass);
          });
        });
      },
      drawPawns: function() {
        var _this = this;
        return _.each(this.model.get('pawns'), function(pawns, pawnClass) {
          return _.each(pawns, function(posStr) {
            var pos;
            pos = posStr.split(':');
            return _this.drawCell(pos[0], pos[1], 'pawn ' + pawnClass);
          });
        });
      },
      drawCell: function(i, j, cellClass) {
        var cell, x, y;
        x = MARGIN + CELL_WIDTH * i;
        y = MARGIN + CELL_WIDTH * j;
        cell = $('<div/>');
        cell.addClass('cell');
        cell.addClass(cellClass);
        cell.css({
          width: CELL_WIDTH + 'px',
          height: CELL_HEIGHT + 'px',
          left: x + 'px',
          top: y + 'px'
        });
        return this.$('#board').append(cell);
      },
      updatePlayerTurn: function() {
        var color, diceClass;
        color = GameModel.COLORS[this.model.get('turn').player];
        this.$('#turn').removeClass();
        this.$('#turn').addClass(color);
        diceClass = DICE_CLASSES[this.model.get('turn').dice];
        this.$('#dice').removeClass();
        return this.$('#dice').addClass(diceClass);
      },
      play: function(game) {
        this.model = game;
        this.render();
        return this.updatePlayerTurn();
      },
      backToGameList: function() {
        return this.trigger('back');
      }
    });
    return BoardView;
  });

}).call(this);
