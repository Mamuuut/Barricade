// Generated by CoffeeScript 1.5.0

/*
  gamelist.coffee
*/


(function() {

  define(['backbone', 'GameLineView'], function(Backbone, GameLineView) {
    var GameListView;
    GameListView = Backbone.View.extend({
      el: $("#games"),
      socket: null,
      initialize: function() {
        var _this = this;
        this.socket = this.options.socket;
        this.games = this.options.games;
        this.player = this.options.player;
        this.list = this.$('.list');
        this.games.on('reset', this.render, this);
        this.games.on('add', this.addGame, this);
        this.socket.on('update game', function(gameId) {
          return _this.games.get(gameId).fetch();
        });
        return this.socket.on('update list', function() {
          return _this.games.fetch();
        });
      },
      events: {
        "click #create": "createGame"
      },
      render: function() {
        var _this = this;
        this.list.empty();
        return this.games.each(function(game) {
          return _this.addGame(game);
        });
      },
      addGame: function(game) {
        var line,
          _this = this;
        console.log('addGame', game);
        line = new GameLineView({
          model: game,
          playerid: this.player.id
        });
        line.render();
        line.on('join', function(gameId) {
          return _this.socket.emit('join game', gameId);
        });
        line.on('start', function(gameId) {
          return _this.socket.emit('start game', gameId);
        });
        line.on('quit', function(gameId) {
          return _this.socket.emit('quit game', gameId);
        });
        line.on('play', function(game) {
          return _this.trigger('play', game);
        });
        return this.list.append(line.$el);
      },
      createGame: function() {
        return this.games.create({
          playerIds: [this.player.id],
          playerNames: [this.player.name],
          currentplayer: 0,
          cells: [0, 0, 0, 0, 0, 0, 0, 0, 0]
        }, {
          wait: true
        });
      }
    });
    return GameListView;
  });

}).call(this);
